---
- name: "Create / Verify {{ default.vagrant_dir }}"
  file: name="{{ default.vagrant_dir }}" state=directory

- name: "Generate Vagrant run-time configurations"
  template:
    src: "{{ item }}.j2"
    dest: "{{ default.vagrant_dir }}/{{ item }}"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_gid }}"
  with_items:
    - servers.yml
    - inventory
    - Vagrantfile
  tags:
  - conf

- name: "Generate global inventory file"
  template:
    src: inventory.j2
    dest: "{{ default.vagrant_dir }}/../inventories/inventory"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_gid }}"
  tags:
  - conf

- name: "Destroy vagrant boxes"
  command: "vagrant destroy -f"
  args:
      chdir: "{{ default.vagrant_dir }}"
  when: (clean is defined) or (force is defined)

- name: "Create vagrant boxes"
  command: "vagrant up --provision"
  args:
      chdir: "{{ default.vagrant_dir }}"
  when: clean is undefined

#- name: Fire up a set of vagrant instances to log into
#  local_action: vagrant
#    state=present
#    box_name="{{ cicd_hosts_manager.cname }}"
#    box_path="{{ cicd_hosts_manager.box }}"
#    vm_name="{{ cicd_hosts_manager.cname }}"
#    count=1
#  register: vagrant
##  with_items: "{{ cicd.hosts }}"
##      state=present
##      box_name="{{ item.box }}"
##      box_path="{{ item.box }}"
##      vm_name="{{ item.cname }}"
##      count=1
##  register: vagrant
##  with_items: "{{ cicd.hosts }}"  box_name="{{ item.box }}"
